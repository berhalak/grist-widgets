{"version":3,"sources":["App.js","index.js"],"names":["ColEditor","text","rows","onChange","selected","options","length","Object","keys","filter","x","map","c","value","className","class","e","target","loading","lanes","id","title","cards","cookies","Cookies","App","state","desc","this","setState","set","get","grist","ready","onRecords","data","Person","Color","Title","undefined","from","groupBy","l","key","substring","description","draggable","toArray","console","log","config","board","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f510b01.chunk.js","sourcesContent":["import React from 'react'\nimport Board from 'react-trello'\nimport {from} from \"fromit\"\nimport Cookies from 'universal-cookie';\n/* global grist */\n\nconst data = {\n  lanes: [\n    {\n      id: 'lane1',\n      title: 'Planned Tasks',\n      label: '2/2',\n      cards: [\n        {id: 'Card1', title: 'Write Blog', description: 'Can AI make memes', label: '30 mins', draggable: false},\n        {id: 'Card2', title: 'Pay Rent', description: 'Transfer via NEFT', label: '5 mins', metadata: {sha: 'be312a1'}}\n      ]\n    },\n    {\n      id: 'lane2',\n      title: 'Completed',\n      label: '0/0',\n      cards: []\n    }\n  ]\n}\n\nfunction ColEditor({text, rows, onChange, selected}) {\n  const columns = rows.length ? Object.keys(rows[0]) : [];\n  const options = columns.filter(x => x !== 'id').map(c => (\n    <option value={c} key={c}>{c}</option>\n  ));\n  return <div className=\"px-3 py-2 flex gap-1 flex-wrap\">\n    <div class=\"text-white\">{text}:</div>\n    <select value={selected} onChange={(e) => onChange(e.target.value)}>\n      <option value=\"\">-- select --</option>\n      {options}\n    </select>\n  </div>\n}\n\nconst loading = {\n  lanes: [\n    {id: 'loading', title: 'loading', cards: []}\n  ]\n};\nconst cookies = new Cookies();\n\nexport default class App extends React.Component {\n  state = {\n    rows: [],\n    lanes: null,\n    title: null,\n    desc: null,\n  }\n\n  config(state) {\n    this.setState(state);\n    if (this.state.lanes)\n      cookies.set('lanes', this.state.lanes);\n    if (this.state.title)\n      cookies.set('title', this.state.title);\n    if (this.state.desc)\n      cookies.set('desc', this.state.desc);\n  }\n\n  componentDidMount() {\n\n    this.setState({\n      lanes: cookies.get(\"lanes\"),\n      title: cookies.get(\"title\"),\n      desc: cookies.get(\"desc\"),\n    })\n\n    grist.ready();\n    grist.onRecords((data) => {\n      this.setState({rows: data});\n    })\n\n    this.setState({\n      rows: [{\n        Person: 'John',\n        Color: 'Blue',\n        Title: 'hello',\n        id : 0,\n      },\n      {\n        Person: 'John',\n        Color: 'Red',\n        id : 2,\n        Title: 'hello'\n      },\n      {\n        Person: 'Mary',\n        id : 3,\n        Color: 'Red',\n        Title: 'hello'\n      }]\n    })\n  }\n\n  get board() {\n    if (!this.state.rows || !this.state.lanes || !this.state.desc || !this.state.title) {\n      return loading;\n    }\n    const title = (x) => (x === null || x === undefined || x === '') ? 'Unnamed' : `${x}`;\n    const grouped = from(this.state.rows).groupBy(x => title(x[this.state.lanes]));\n    const lanes = grouped.map(l => {\n      return {\n        id: title(l.key),\n        title: title(l.key),\n        cards: l.map(c => ({\n          id: c.id,\n          title: (title(c[this.state.title]) || '').substring(0, 20),\n          description: `${c[this.state.desc]}`,\n          draggable: true\n        })).toArray()\n      }\n    });\n    console.log([...lanes])\n    return {lanes : [...lanes]};\n  }\n\n\n  render() {\n    return <div>\n      <div class=\"flex gap-2 bg-green-600\">\n        <ColEditor text=\"Lanes\" selected={this.state.lanes} rows={this.state.rows} onChange={lanes => this.config({lanes})} />\n        <ColEditor text=\"Title\" selected={this.state.title} rows={this.state.rows} onChange={title => this.config({title})} />\n        <ColEditor text=\"Description\" selected={this.state.desc} rows={this.state.rows} onChange={desc => this.config({desc})} />\n      </div>\n      <Board data={this.board} draggable className=\"bg-green-600\" />\n    </div>\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}